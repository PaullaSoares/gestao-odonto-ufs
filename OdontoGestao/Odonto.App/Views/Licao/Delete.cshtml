@model Odonto.Core.Models.Licao

@{
    ViewData["Title"] = "Deletar Lição";
}
<p></p>
<h3>Tem certeza que deseja excluir esta lição?</h3>
@*<div>
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Titulo)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Titulo)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.TextoLicao)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.TextoLicao)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Topico)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Topico.Id)
            </dd>
        </dl>

        <form asp-action="Delete">
            <input type="hidden" asp-for="Id" />
            <input type="submit" value="Delete" class="btn btn-default" /> |
            <a asp-action="Index">Back to List</a>
        </form>
    </div>
*@

<script src="https://cdn.quilljs.com/1.0.0/quill.js"></script>
<script src="~/lib/jquery/dist/jquery.min.js"></script>

@Html.AntiForgeryToken()

<div class="modal" id="CriarTopico">
</div>

<div class="internal-page-content">
    <div class="internal-page-form">
        @using (Html.BeginForm("Delete", "Licao", new {ReturnUrl = ViewBag.ReturnUrl}, FormMethod.Post, null, new {@id = "form-input"}))
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                <h4>Detalhes da Lição</h4>
                <hr/>

                <div class="control-borderless-button">
                    @Html.DisplayFor(m => m.Titulo)
                </div>

                <div hidden>
                    @Html.TextBoxFor(m => m.TextoLicao, new {@class = "control-borderless-button", @placeholder = "Texto Licao"})
                </div>
                <hr/>

                <div id="editor-container"></div>

                <div class="form-group">
                    <div class="col-md-10 nopadding-right">
                        @Html.LabelFor(model => model.Topico, htmlAttributes: new {@class = "control-label col-md-2"})
                        @Html.DisplayFor(x => x.Topico.Titulo, new {@class = "form-control control-with-side-button"})
                    </div>
                </div>

                @*<form asp-action="Delete">
                        <input type="hidden" asp-for="Id" />
                        <input type="submit" value="Deletar" class="btn btn-primary pull-right mb-xl" />
                    </form>*@
                
                <input type="submit" value="Deletar" class="btn btn-primary pull-right mb-xl" />

            </div>
        }
        </div>
    </div>

    <!-- Initialize Quill editor -->
    <script>
        var toolbarOptions = [
            ['bold', 'italic', 'underline', 'strike'],        // toggled buttons
            [{ 'align': [] }],

            //[{ 'header': 1 }, { 'header': 2 }],               // custom button values
            [{ 'list': 'ordered' }, { 'list': 'bullet' }],
            [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript
            [{ 'indent': '-1' }, { 'indent': '+1' }],          // outdent/indent
            [{ 'direction': 'rtl' }],                         // text direction

            [{ 'header': [1, 3, false] }],

            [{ 'color': [] }],          // dropdown with defaults from theme
            ['blockquote'],
            ['link', 'image', 'video'],
            ['clean']                                         // remove formatting button
        ];

        var Font = Quill.import('formats/font');
        Font.whitelist = ['roboto'];
        Quill.register(Font, true);

        var editor = new Quill('#editor-container', {
            modules: { toolbar: toolbarOptions },
            placeholder: 'Texto da Lição',
            theme: 'snow'
        });

        //editor.root.innerHTML = document.querySelector('#TextoLicao').value;

        editor.setContents(JSON.parse(document.querySelector('#TextoLicao').value));
        this.editor.disable();

    </script>

    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }